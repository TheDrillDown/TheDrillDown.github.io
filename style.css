/* Define CSS variables for colors */
:root {
  --background-color: #fdfbec;
  --text-color: #08524d;
  --hover-color: #d3c886;
  --border-color: #ccc;
  --header-bg-color: #f5f5f5;
  --button-bg-color: #f0f0f0;
  --slidedeck-button-color: #28a745;
  --video-button-color: #0366d6;
  --github-button-color: #24292e;
  --markdown-link-color: #0366d6;
  --markdown-blockquote-color: #6a737d;
  --markdown-border-color: #eaecef;
  --markdown-code-bg-color: rgba(27, 31, 35, 0.05);
  --markdown-pre-bg-color: #f6f8fa;
}

body {
  font-family: Arial, sans-serif; /* Set font family */
  background-color: var(
    --background-color
  ); /* Use variable for background color */
  margin: 0; /* Remove default margin */
  padding: 0; /* Remove default padding */
  color: var(--text-color); /* Use variable for text color */
  scrollbar-width: thin; /* Firefox: Make scrollbar thin */
  scrollbar-color: var(--hover-color) transparent; /* Firefox: Set scrollbar color */
}

.container {
  width: 100%; /* Make container take full width */
  max-width: 100%; /* Ensure container does not exceed full width */
  margin: 0 auto; /* Center container */
  padding: 20px; /* Add padding */
  background-color: var(
    --background-color
  ); /* Use variable for background color */
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Add shadow */
  display: flex; /* Use flexbox layout */
  flex-direction: column; /* Change to column layout */
  gap: 20px; /* Add space between items */
  box-sizing: border-box; /* Include padding in the element's total width and height */
}

#bannerContainer {
  text-align: center; /* Center the banner image */
}

#bannerContainer img {
  max-width: 100%; /* Ensure image takes full width */
  height: auto; /* Maintain aspect ratio */
}

h1 {
  text-align: center; /* Center align text */
  width: 100%; /* Ensure full width */
}

#search {
  width: 90%; /* Set width */
  padding: 10px; /* Add padding */
  margin-bottom: 10px; /* Add margin below */
}

button {
  padding: 10px; /* Add padding */
  margin: 5px; /* Add margin */
}

video {
  width: 100%; /* Ensure video takes full width */
  margin-bottom: 10px; /* Add margin below */
  box-sizing: border-box; /* Include padding in the element's total width and height */
}

#videoContainer {
  flex: none; /* Reset flex property */
}

#playlistContainer {
  width: 100%; /* Ensure playlist container takes full width */
  max-width: 100%; /* Ensure playlist container does not exceed full width */
  flex: none; /* Reset flex property */
  display: block; /* Change to block layout */
  box-sizing: border-box; /* Include padding in the element's total width and height */
}

#playlist {
  list-style: none; /* Remove default list style */
  padding: 0; /* Remove default padding */
  flex-grow: 1; /* Allow to grow */
  overflow-y: auto; /* Enable vertical scrolling */
}

#playlist li {
  padding: 10px; /* Add padding */
  cursor: pointer; /* Change cursor on hover */
  border-bottom: 1px solid var(--border-color); /* Use variable for border color */
}

#playlist li:hover {
  background-color: var(--hover-color); /* Use variable for hover color */
}

#playlist li.playing {
  font-weight: bold; /* Make text bold */
}

#playlist a {
  color: var(--text-color); /* Use variable for text color */
  text-decoration: none; /* Remove underline */
}

#playlist a:hover {
  text-decoration: underline; /* Underline on hover */
}

/* Style for the episode link */
#episodeLink {
  color: var(--text-color); /* Use variable for text color */
  text-decoration: none; /* Remove underline */
}

#episodeLink:hover {
  text-decoration: underline; /* Underline on hover */
}

/* Episode Info Box Styles */
#episodeInfoBox {
  box-sizing: border-box;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  margin-top: 10px;
  overflow: hidden;
  max-width: 100%;
}

.info-header {
  padding: 10px;
  background-color: var(--header-bg-color);
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.info-header h3 {
  margin: 0;
}

.toggle-button {
  transition: transform 0.3s ease-in-out;
  display: inline-block;
  transform-origin: center;
}

.info-content {
  padding: 15px;
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.3s ease-out;
}

/* Preview Container Styles */
.preview-container {
  position: relative;
  max-height: 4.5em;
  overflow: hidden;
  padding-bottom: 2px;
}

.gradient-overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 3em;
  background: linear-gradient(
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.8) 40%,
    rgba(255, 255, 255, 1) 100%
  );
  pointer-events: none;
}

.click-blocker {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 5;
  cursor: default;
}

/* Button Styles */
.expand-button {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  padding: 4px 12px;
  background-color: var(--button-bg-color);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  cursor: pointer;
  z-index: 10;
  font-size: 12px;
}

.show-less-button {
  margin: 15px auto 0;
  display: block;
  padding: 4px 12px;
  background-color: var(--button-bg-color);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  cursor: pointer;
  font-size: 12px;
}

/* Links Section */
.links-container {
  margin-top: 15px;
  display: flex;
  gap: 10px;
  flex-wrap: wrap;
  justify-content: space-between;
}

.button-group {
  display: flex;
  gap: 10px;
}

/* Link Button Styles */
.link-button {
  padding: 5px 10px;
  color: white;
  text-decoration: none;
  border-radius: 4px;
}

.slidedeck-button {
  background-color: var(--slidedeck-button-color);
}

.video-button {
  background-color: var(--video-button-color);
}

.github-button {
  background-color: var(--github-button-color);
  margin-left: auto;
}

/* Markdown Styles */
.markdown-body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial,
    sans-serif;
  font-size: 16px;
  line-height: 1.5;
  word-wrap: break-word;
}

.markdown-body > *:first-child {
  margin-top: 0 !important;
}

.markdown-body h1,
.markdown-body h2 {
  border-bottom: 1px solid var(--markdown-border-color);
  padding-bottom: 0.3em;
}

.markdown-body h1,
.markdown-body h2,
.markdown-body h3,
.markdown-body h4,
.markdown-body h5,
.markdown-body h6 {
  margin-top: 24px;
  margin-bottom: 16px;
  font-weight: 600;
  line-height: 1.25;
}

.preview-markdown > *:first-child {
  margin-top: 0 !important;
}

.markdown-body code {
  padding: 0.2em 0.4em;
  margin: 0;
  font-size: 85%;
  background-color: var(--markdown-code-bg-color);
  border-radius: 3px;
  font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace;
}

.markdown-body pre {
  word-wrap: normal;
  padding: 16px;
  overflow: auto;
  font-size: 85%;
  line-height: 1.45;
  background-color: var(--markdown-pre-bg-color);
  border-radius: 3px;
}

.markdown-body pre code {
  background-color: transparent;
  padding: 0;
}

.markdown-body a {
  color: var(--markdown-link-color);
  text-decoration: none;
}

.markdown-body a:hover {
  text-decoration: underline;
}

.markdown-body blockquote {
  padding: 0 1em;
  color: var(--markdown-blockquote-color);
  border-left: 0.25em solid var(--markdown-border-color);
  margin: 0 0 16px 0;
}

.markdown-body ul,
.markdown-body ol {
  padding-left: 2em;
  margin-top: 0;
  margin-bottom: 16px;
}

/* State classes for expansion */
.expanded .toggle-button {
  transform: rotate(180deg);
}

.content-expanded {
  min-height: 200px;
}

/* Media query for landscape orientation */
@media (orientation: landscape) {
  .container {
    flex-direction: row; /* Change to row layout */
  }

  #videoContainer {
    align-items: center; /* Center content vertically */
    width: 75%; /* Set width */
    height: 100%; /* Set height */
  }

  #playlistContainer {
    width: 25%; /* Set width */
    padding-right: 10px; /* Add padding to the right */
  }
}

/* Media query for portrait orientation */
@media (orientation: portrait) {
  .container {
    flex-direction: column; /* Change to column layout */
  }

  #videoContainer {
    flex: none; /* Reset flex property */
  }

  #playlistContainer {
    flex: none; /* Reset flex property */
    max-width: 100%; /* Ensure playlist container takes full width */
  }
}
